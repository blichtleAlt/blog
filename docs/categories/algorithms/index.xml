<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on blog</title>
    <link>https://blichtlealt.github.io/hugo/categories/algorithms/</link>
    <description>Recent content in algorithms on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Aug 2020 17:46:40 -0400</lastBuildDate>
    
	<atom:link href="https://blichtlealt.github.io/hugo/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>814. Binary Tree Pruning</title>
      <link>https://blichtlealt.github.io/hugo/blog/binary-tree-pruning/</link>
      <pubDate>Mon, 10 Aug 2020 17:46:40 -0400</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/binary-tree-pruning/</guid>
      <description>https://leetcode.com/problems/binary-tree-pruning/
We are given the head node root of a binary tree, where additionally every node&amp;rsquo;s value is either a 0 or a 1.
Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.
(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)
Example 1:
1 \ 0 / \ 0 1 Return:</description>
    </item>
    
    <item>
      <title>100. Same Tree</title>
      <link>https://blichtlealt.github.io/hugo/blog/same-tree/</link>
      <pubDate>Mon, 10 Aug 2020 01:55:08 -0400</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/same-tree/</guid>
      <description>https://leetcode.com/problems/same-tree/
Given two binary trees, write a function to check if they are the same or not.
Two binary trees are considered the same if they are structurally identical and the nodes have the same value.
Idea:Solution:</description>
    </item>
    
    <item>
      <title>113. Path Sum II</title>
      <link>https://blichtlealt.github.io/hugo/blog/path-sum-ii/</link>
      <pubDate>Mon, 10 Aug 2020 00:55:08 -0400</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/path-sum-ii/</guid>
      <description>Link: https://leetcode.com/problems/path-sum-ii/
Problem Statement: Given a binary tree and a sum, find all root-to-leaf paths where each path&#39;s sum equals the given sum. Note: A leaf is a node with no children.
Example: Given the below binary tree and sum = 22,
5 / \ 4 8 / / \ 11 13 4 / \ / \ 7 2 5 1 Return:
[ [5,4,11,2], [5,8,4,5] ] Idea: We can solve this using a recursive depth first search approach.</description>
    </item>
    
  </channel>
</rss>